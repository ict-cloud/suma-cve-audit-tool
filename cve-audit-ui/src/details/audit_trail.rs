use yew::prelude::*;
use cve_audit_types::*;

#[derive(Properties, PartialEq)]
pub struct AuditTrailProps {
    pub errata_id: u32,
}

#[function_component(AuditTrailList)]
pub fn audit_trail_list(audit_trail_props: &AuditTrailProps) -> Html {
    let audit_trail = use_state(|| vec![]);
    let url = format!("http://localhost:8081/api/errata/{}/audittrail", audit_trail_props.errata_id);
    {
        let audit_trail = audit_trail.clone();
        use_effect_with_deps(move |url| {
            let audit_trail = audit_trail.clone();
            let url = url.clone();
            wasm_bindgen_futures::spawn_local(async move {
                let fetched_at: Vec<cve_audit_types::ErrataAuditData> = reqwasm::http::Request::get(url.as_str())
                    .send()
                    .await
                    .unwrap()
                    .json()
                    .await
                    .unwrap_or_default();
                audit_trail.set(fetched_at);
            });
            || ()
        }, url.clone());
    }

    html! {
        <div>
            {"List"}
            //{ render_list(audit_trail)}
        </div>
    }
}