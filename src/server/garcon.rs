use warp::{filters::BoxedFilter, Reply, Filter};

use crate::server::reject;

//#[tokio::main]
pub async fn serv(listen: &str, i_routes: BoxedFilter<(impl Reply + 'static,)>){
    let addr: std::net::SocketAddr = listen.parse().expect("Unable to parse socket address");
    // define all routes
    let rtes = i_routes.to_owned(); //routes::stat_routes().or(routes::api_routes());
    warp::serve(rtes.recover(reject::handle_rejection)).run(addr).await;
    // TODO: the index..._bg.wasm file neets to be sent with the proper header type, otherwise chrome will fail (Edge will work though)
    // see https://stackoverflow.com/questions/53900736/invalid-or-unexpected-token-in-webassembly
}