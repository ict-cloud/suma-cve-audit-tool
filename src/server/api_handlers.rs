use warp::reply::json;
use crate::persistence::{keyval, rdbms};


pub async fn listhandler(db: sled::Db) -> Result<impl::warp::Reply, warp::Rejection> {
    Ok(warp::reply::json(&keyval::get_all(Some(db))))
}

pub async fn erratalisthandler(i_kind: String) -> Result<impl::warp::Reply, warp::Rejection> {
    match i_kind.as_str() {
        "affected"   => { Ok(warp::reply::json(&rdbms::get_secadvisories(rdbms::SecAdvisoryKind::Affected))) }
        "unaffected" => { Ok(warp::reply::json(&rdbms::get_secadvisories(rdbms::SecAdvisoryKind::Unaffected))) }
        _            => { Ok(warp::reply::json(&rdbms::get_errataext())) }
    }
}