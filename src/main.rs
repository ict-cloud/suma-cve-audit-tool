extern crate log;
extern crate pretty_env_logger;

use tokio::runtime::Runtime;
use lazy_static::lazy_static;
use crate::settings::settings::Settings;

mod persistence;
mod server;
mod settings;
mod suma;
#[cfg(test)]
mod tests;


lazy_static! {
    pub static ref SETTINGS: Settings = 
        Settings::load();
}


fn main() {
    pretty_env_logger::init();

    let rt = Runtime::new().unwrap();
    rt.block_on(persistence::rdbms_init::setup()).unwrap();

    // run the api to load the records for inspection
    match rt.block_on(suma::sumaclient::run_api()) {
        Ok(_) => log::info!("SUMA Client API successfully run"),
        Err(err) => log::error!("Error in SUMA Client API: {}", err),
    };

    println!("Starting webserver on http://{}", SETTINGS.server.listen);

    match rt.block_on(server::garcon::serv(SETTINGS.server.listen.as_str())) {
        Ok(_) => log::info!("Done"),
        Err(e) => log::error!("An error ocurred: {}", e),
    };
}
