use yew::prelude::*;
use yew_router::prelude::*;
use crate::route;

#[function_component(SideNav)]
pub fn side_nav() -> Html {
    html! {
        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        {render_navlink(route::AppRoute::Home, "Affected CVEs")}
                    </li>
                    <li class="nav-item">
                        {render_navlink(route::AppRoute::AffectedUnrated, "Unrated/Open CVEs")}
                    </li>
                    <li class="nav-item">
                        {render_navlink(route::AppRoute::NotAffected, "Not affected CVEs")}
                    </li>
                    <li class="nav-item">
                        {render_navlink(route::AppRoute::OtherErrata, "Other Errata")}
                    </li>
                    <li class="nav-item">
                        {render_navlink(route::AppRoute::ErrataAuditReport, "Report - Errata with Audits")}
                    </li>
                </ul>
            </div>
        </nav>
    }
}


fn render_navlink(i_to: route::AppRoute, i_title: &str) -> Html {
    let current_route = use_route::<route::AppRoute>();
    let activ = if current_route.unwrap_or_default() == i_to {
        "active"
    } else {
        ""
    };

    html! {
        <Link <route::AppRoute> to={i_to} classes={classes!("nav-link", "link-dark", activ)}>{ i_title }</Link<route::AppRoute>>
    }
}